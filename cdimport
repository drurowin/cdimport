#!/usr/bin/env zsh

# cdimport - semi-automatic CD import script

# Copyright (C) 2013 Lucien Pullen <drurowin@gmail.com>
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

[[ -z $CDIMPORT_DEST ]] && CDIMPORT_DEST=$HOME/Music/cdimport

VERSION='1.3'

[[ $# -eq 0 ]] && {
    echo "Usage: cdimport [-nT] [-d input] [-e extension] [-F ffmpeg] [-f metapath]"
    echo "                [-o outpath] [@meta-name value]..."
    echo "       cdimport --help"
    echo "       cdimport --version"
    exit
}

local dot1
dot1=$(echo $0(:h))/cdimport.1
function print_help() {
    man ${(q)dot1}
}

ERR=0

DIR=$(pwd)
METAPATH=
EXT=
FFMPEG=
OUTPATH=

typeset -A metadata
typeset -A track_metadata
NUMBER=t

NOEXEC=

while test ! -z "$1"; do
    [[ $(echo "$1" | cut -c 1) == "@" ]] && {
        meta=${1[2,-1]}
        track=$(print -- $meta | awk 'BEGIN {FS=":"} /:/ {print $1}')
        name=$(print -- $meta | awk 'BEGIN {FS=":"} /:/ {print $2}')
        [[ -z $track ]] && name=$meta
        [[ ! -z $(print -- $name | awk '/=/ {print "="}') ]] && {
            name=$(print -- $name | awk 'BEGIN {FS="="} {print $1}')
            value=$(print -- $meta | awk 'BEGIN {FS="="} {res=$2; for(i = 3; i <= NF; i++) { res = res "=" $i; } print res; }')
            shift
        } || {
            value=$2
            shift 2
        }
        name=$(print -- $name | gawk '{print tolower($0)}')
        [[ -z $track ]] && {
            metadata[$name]=$value
        } || {
            track_metadata[$(printf "%i:%s" "$track" "$name")]=$value
            [[ -z $metadata[$name] ]] && metadata[$name]=""
        }
        continue
    }
    [[ $(echo -- "$1" | cut -c 1) != "-" ]] && {
        shift
        continue
    }
    case "$1" in
        -d|--dir)
            DIR=$2
            shift 2
            ;;
        -e|--ext)
            EXT=$2
            shift 2
            ;;
        -F|--ffmpeg)
            FFMPEG=$2
            shift 2
            ;;
        -f)
            METAPATH=$2
            shift 2
            ;;
        -h|--help)
            print_help
            exit
            ;;
        -n|--dry-run)
            NOEXEC=noexec
            shift
            ;;
        -o|--outdir)
            OUTPATH=$2
            shift 2
            ;;
        -T)
            NUMBER=
            shift
            ;;
        -v|--version)
            echo "cdimport v$VERSION"
            exit
            ;;
        *)
            echo "Unexpected Argument '$1'" >&2
            shift
            ;;
    esac
done

[[ ! -d $DIR ]] && {
    DIR=$'\e[31m$DIR\e[0m'
    ERR+=1
}

[[ -z $METAPATH ]] && METAPATH=$DIR

[[ -z $FFMPEG ]] && {
    ffmpeg >/dev/null 2>/dev/null
    case $? in
        126)
            FFMPEG=$'\e[31mno exec\e[0m'
            ERR+=1
            ;;
        127)
            FFMPEG=$'\e[31mno\e[0m'
            ERR+=1
            ;;
        *)
            FFMPEG=$(which ffmpeg)
            ;;
    esac
}

function check() {
    [[ ! -z $2 ]] && {
        printf "%-28s%s\n" "$1" "$2"
    } || {
        printf "%-28s%s\n" "$1" "$3"
    }
}

function escape() {
    echo \'$(echo $1 | sed "s/'/'\\\''/g")\'
}

function sanitize() {
    echo $(echo $1 | sed 's/\[//g;s/\]//g;s/['\''"(){}:]//g;s/[ ]\{2,\}/ /g;s/\///g')
}

check "Testing for FFmpeg..." "$FFMPEG" >&2
check "Input path" "$DIR" >&2
check "FFmetadata path" "$METAPATH" >&2
check "Output path" "$OUTPATH" "$CDIMPORT_DEST" >&2
check "Embedded track number" "$NUMBER" >&2
check "File extension" "$EXT" "*" >&2
echo "Declared metadata" >&2
for k in ${(k)metadata}; do
    [[ ! -z $metadata[$k] ]] && echo "\t$k: ${metadata[$k]}" >&2
done
for k in ${(k)track_metadata}; do
    echo "\t$k: $track_metadata[$k]" >&2
done

((ERR > 0)) && exit 1

FILES=("${(@f)$(ls -1 "$DIR")}")

for f in $FILES; do
    [[ ! -z $EXT && ${f##*.} != $EXT ]] && continue;
    [[ ${f##*.} == "ffmetadata" ]] && continue;

    FILE=$(echo -n $f | awk 'BEGIN {FS="/"} {print $NF}')
    TITLE=$FILE
    DISC=
    [[ $NUMBER == "t" ]] && {
        TRK=$(echo $FILE | awk '{print $1}')

        TITLE=$(echo $FILE | awk '{$1=""; print}')

        FFMETAFILE=$METAPATH/$TRK.ffmetadata
    }
    TITLE=$(echo ${TITLE%.*} | sed $'s/^[ \t]*//;s/[ \t]*$//')

    CMD="$FFMPEG -i $(escape "$DIR/$FILE")"
    [[ -r $FFMETAFILE && -f $FFMETAFILE ]] && {
        CMD+=" -i $(escape "$FFMETAFILE") -map_metadata 0:1"
        FFTITLE=$(gawk 'BEGIN {FS="="} /^title=/ {print $NF}' $FFMETAFILE)
        ALBUM=$(gawk 'BEGIN {FS="="} /^album=/ {print $NF}' $FFMETAFILE)
        ARTIST=$(gawk 'BEGIN {FS="="} /^artist=/ {print $NF}' $FFMETAFILE)
        track=$(gawk 'BEGIN {FS="="} /^track=/ {print $NF}' $FFMETAFILE)
        DISC=$(gawk 'BEGIN {FS="="} /^disc(number)?=/ {print $NF}' $FFMETAFILE)
        [[ ! -z $track ]] && TRK=$track
    }

    for meta in ${(k)metadata}; do
        value=$track_metadata[$(printf "%i:%s" "$TRK" "$meta")]
        [[ -z $value ]] && [[ -z $metadata[$meta] ]] && continue
        [[ -z $value ]] && value=$metadata[$meta]
        case "$meta" in
            title)
                unset FFTITLE
                TITLE=$value
                ;;
            disc|discnumber)
                DISC=$value
                CMD+=" -metadata $meta=$(escape "$value")"
                ;;
            *)
                CMD+=" -metadata $meta=$(escape "$value")"
                ;;
        esac
    done

    [[ $NUMBER == "t" ]] && CMD+=" -metadata track=$(printf "%i" "$TRK")"

    [[ ! -z $OUTPATH ]] && {
        TARGET=$OUTPATH
    } || {
        [[ -z $ALBUM ]] && ALBUM=$metadata[album]
        [[ -z $ARTIST ]] && ARTIST=$metadata[artist]
        TARGET=$CDIMPORT_DEST/$(sanitize "$ARTIST")/$(sanitize "$ALBUM")
    }

    [[ ! -z $FFTITLE ]] && {
        TITLE=$FFTITLE
    } || {
        CMD+=" -metadata title=$(escape "$TITLE")"
    }
    DISC=$(echo $DISC | gawk 'BEGIN {FS="/"} {print $1}')
    [[ ! -z $DISC && ! -z $TRK ]] && {
        DISC=$(printf "%02i." $DISC)
    } || {
        DISC=
    }
    [[ ! -z $TRK ]] && TRK=$(printf "%02i -- " $TRK)
    CMD+=" -y '$TARGET/$DISC$TRK$(sanitize "$TITLE").flac'"

    [[ ! -z $NOEXEC ]] && {
        echo $CMD
    } || {
        mkdir -p "$TARGET"
        eval $CMD
    }
done
